import pandas as pd

from pandas_datareader import data as pdr

import fix_yahoo_finance as yf

import numpy as np

import datetime as dt

    

# Create our portfolio of equities

tickers = ['AAPL.O','IBM.N', 'GOOG.O', 'BP.N', 'XOM.N', 'COST.O', 'GS.N']

 

# Set the investment weights

weights = np.array([.15, .2, .2, .15, .1, .15, .05])

 

# Set an initial investment level

initial_investment = 1000000

 

# Download closing prices

data = pdr.get_data_yahoo(tickers, start="2016-01-01", end="2016-12-31")['Close']

 

#From the closing prices, calculate periodic returns

returns = data.pct_change()



returns.tail()



# Generate Var-Cov matrix

cov_matrix = returns.cov()

cov_matrix



# Calculate mean returns for each stock

avg_rets = returns.mean()

 


# Calculate mean returns for portfolio overall, using dot product to normalize individual means against investment weights

port_mean = avg_rets.dot(weights)

 

# Calculate portfolio standard deviation

port_stdev = np.sqrt(weights.T.dot(cov_matrix).dot(weights))

 

# Calculate mean of investment

mean_investment = (1+port_mean) * initial_investment

             

# Calculate standard deviation of investmnet

stdev_investment = initial_investment * port_stdev


# Select 95% confidence interval 

conf_level1 = 0.05



# Using SciPy ppf method to generate values for the inverse cumulative distribution function to a normal distribution

# Plugging in the mean, standard deviation of our portfolio as calculated above

from scipy.stats import norm

cutoff1 = norm.ppf(conf_level1, mean_investment, stdev_investment)



#Finally, we can calculate the VaR at our confidence interval

var_1d1 = initial_investment - cutoff1

var_1d1



# Calculate 366 Day VaR

var_array = []

num_days = int(366)

for x in range(1, num_days+1):    

    var_array.append(np.round(var_1d1 * np.sqrt(x),2))

    print(str(x) + " day VaR @ 95% confidence: " + str(np.round(var_1d1 * np.sqrt(x),2)))



# Build plot

plt.xlabel("Day #")

plt.ylabel("Max portfolio loss (USD)")

plt.title("Max portfolio loss (VaR) over 366-day period")

plt.plot(var_array, "r")

